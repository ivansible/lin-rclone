---
- name: install rclone
  import_tasks: install.yml
  tags: lin_rclone_install

- name: create rclone fuse wrapper
  template:
    src: rclonefs.sh
    dest: /sbin/mount.rclone
    mode: 0755
  notify: restart remote systemd mounts
  tags: lin_rclone_wrapper

- name: create group for access to rclone config and mounts
  group:
    name: rclone
    gid: "{{ lin_rclone_group_gid }}"
  tags: lin_rclone_install

- name: give remote user access to rclone config and mounts
  user:
    name: "{{ ansible_user_id }}"
    groups: rclone
    append: true
  when: lin_rclone_allow_nonroot |bool
  tags: lin_rclone_config

- name: ensure correct permissions on rclone config directory
  file:
    path: "{{ lin_rclone_config |expanduser |dirname }}"
    state: directory
    group: rclone
    mode: g+rwx
  tags: lin_rclone_config

- name: add blockinfile workaround in rclone config and fix access rights
  # without this empty section rclone token refresher will strip last blockinfile comment
  lineinfile:
    path: "{{ lin_rclone_config |expanduser }}"
    line: "[end_of_ansible_blocks]"
    create: true
    ## rclone periodically updates config file and changes its owner
    ## so let's keep owner for the sake of idempotence
    # owner: root
    group: rclone
    mode: 0640
  tags: lin_rclone_config

- name: ensure correct permissions on rclone cache directory
  file:
    path: "{{ lin_rclone_cache_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - lin_rclone_config
    - lin_rclone_mounts

- name: setup rclone mounts
  include_tasks: _mount.yml
  args:
    apply:
      become: true
      tags:
        - lin_rclone_config
        - lin_rclone_mounts
  no_log: "{{ hide_secrets |bool }}"
  loop: "{{ lin_rclone_mounts }}"
  loop_control:
    label: "{{ item.name |d(item.path) |d('mount...') }}"
  when: item.enabled |d(true)
  tags:
    - lin_rclone_config
    - lin_rclone_mounts

- name: setup docker rclone plugin
  ## this task should go AFTER mounts because docker plugin will rewrite config file at startup
  import_tasks: docker_plugin.yml
  vars:
    alias: "{{ lin_rclone_docker_plugin_alias |d('rclone') }}"
    upgrade: "{{ lin_rclone_docker_plugin_upgrade |bool }}"
    reinstall: "{{ lin_rclone_docker_plugin_reinstall |bool }}"
  when: lin_rclone_docker_plugin_enable |bool
  tags: lin_rclone_docker_plugin

- name: open rclone api port in ferm
  ferm_port:
    port: "{{ lin_rclone_api_port }}"
    comment: rclone
    zone: internal
  when:
    - lin_firewall == 'ferm'
    - lin_rclone_api_port |d(0) |int
  ignore_errors: "{{ ansible_check_mode }}"
  tags: [skip_ansible_lint, lin_rclone_firewall]
...
